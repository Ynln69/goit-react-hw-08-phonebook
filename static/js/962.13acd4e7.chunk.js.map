{"version":3,"file":"static/js/962.13acd4e7.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","pages/Register.styled.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormRegist = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  > label {\n    position: relative;\n    border: 2px solid #111111;\n    border-radius: 40px;\n    padding: 20px 40px;\n    > input {\n      background-color: transparent;\n      border: none;\n      font-weight: 700;\n      font-size: 18px;\n      line-height: 24px;\n      letter-spacing: -0.01em;\n      outline: none;\n    }\n  }\n`;\n\nexport const BtnHide = styled.button`\n  position: absolute;\n  right: 15px;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n\n  background-color: cadetblue;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 22px;\n  letter-spacing: -0.01em;\n`;\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n","import { Input } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { FormRegist, BtnHide } from './RegisterForm.styled';\nimport { ButtonIcon } from 'components/UserMenu/UserMenu.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <FormRegist onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        <input type=\"text\" name=\"name\" placeholder=\"Name\" />\n      </label>\n      <label>\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" />\n      </label>\n      <label>\n        <Input\n          type={show ? 'text' : 'password'}\n          name=\"password\"\n          placeholder=\"Password\"\n        />\n        <BtnHide type=\"button\" h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n          {show ? 'Hide' : 'Show'}\n        </BtnHide>\n      </label>\n      <ButtonIcon type=\"submit\">Register</ButtonIcon>\n    </FormRegist>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { RegisterSection, RegisterBox } from './Register.styled';\nimport IconProfile from '../images/icon-profile.png';\n\nconst Register = () => {\n  return (\n    <RegisterSection>\n      <RegisterBox>\n        <img src={IconProfile} alt=\"\" width=\"200px\" />\n        <RegisterForm />\n      </RegisterBox>\n    </RegisterSection>\n  );\n};\n\nexport default Register;\n","import styled from '@emotion/styled';\n\nexport const RegisterSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 150px 0;\n`;\n\nexport const RegisterBox = styled.div`\n  position: relative;\n  padding-top: 140px;\n  padding-right: 30px;\n  padding-bottom: 40px;\n  padding-left: 30px;\n  border: 2px solid #111111;\n  border-radius: 18px;\n\n  background: #f6f6f6;\n  > img {\n    position: absolute;\n    left: 23%;\n    top: -23%;\n  }\n`;\n"],"names":["FormRegist","styled","BtnHide","assignRef","ref","value","current","error","Error","mergeRefs","refs","node","forEach","createContext","name","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","styles","useMultiStyleConfig","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","getLabelProps","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","className","cx","jsx","chakra","__css","displayName","field","helperText","useFormControl","_a","_b","_c","disabled","readOnly","required","rest","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","size","RegisterForm","dispatch","useDispatch","show","setShow","onSubmit","e","preventDefault","form","currentTarget","register","elements","email","password","reset","autoComplete","type","placeholder","h","onClick","src","IconProfile","alt","width","RegisterSection","RegisterBox"],"sourceRoot":""}